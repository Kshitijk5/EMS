package com.thymleafdemo.springbootthymleafdemo.securityconfig;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration

public class SecurityConfig {
	
	@Autowired
	private UserDetailsService detailsService;
     
	@Bean
	public SecurityFilterChain getSecurityFilterChain(HttpSecurity http) throws Exception {
		http
		    
		    .authorizeHttpRequests(authorize->authorize
		    		.requestMatchers("/login").permitAll()
		    		.requestMatchers("/register").permitAll()
		    		.requestMatchers("/registerprocess").permitAll()
        			.requestMatchers("/main").hasAnyRole("ADMIN","USER","LEADER")
		    		.anyRequest().authenticated()
		    		
		    		)
		    
		.formLogin(form -> form
				.loginPage("/login")
				.loginProcessingUrl("/processor")
				.defaultSuccessUrl("/main",true)
			
			)
		.logout().permitAll();
  
		return http.build();
		
	}
	
	@Bean public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder(10);
	}
	
	@Bean public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) throws Exception {
		return  authenticationConfiguration.getAuthenticationManager();
	}
//	---- IN MEMORY AUTHENTICATION
//	@Bean public InMemoryUserDetailsManager getMemoryUserDetailsManager() {
//		
//		UserDetails user1 = User.builder().username("Kshitij").password(passwordEncoder().encode("123")).roles("ADMIN").build();
//		UserDetails user2 = User.builder().username("Scout").password(passwordEncoder().encode("secret")).roles("USER").build();
//		UserDetails user3 = User.builder().username("Zitrox").password(passwordEncoder().encode("123UWU")).roles("LEADER").build();
//	return new InMemoryUserDetailsManager(user1,user2,user3);
//	}
}
