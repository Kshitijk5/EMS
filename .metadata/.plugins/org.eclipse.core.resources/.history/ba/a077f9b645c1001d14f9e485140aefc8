package com.thymleafdemo.springbootthymleafdemo.securityconfig;

//import java.util.Collection;
import java.util.Set;

import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.thymleafdemo.springbootthymleafdemo.entities.Employee;
import com.thymleafdemo.springbootthymleafdemo.repository.EmployeeRepo;

@Service
public class CustomUserService implements UserDetailsService {

	@Autowired
	private EmployeeRepo employeeRepo;

	@Override
	public UserDetails loadUserByUsername(String usernameOrEmail) throws UsernameNotFoundException {

		Employee employee = employeeRepo.findByUsernameOrEmail(usernameOrEmail, usernameOrEmail).orElseThrow(
				() -> new UsernameNotFoundException("No user with Username" + usernameOrEmail + " existss"));
		Set<GrantedAuthority> roles = employee.getRoles().stream()
				.map(role -> new SimpleGrantedAuthority(role.getName())).collect(Collectors.toSet());

		return new User(employee.getUsername(), employee.getPassword(), roles);

		// return new CustomUserDetails(employee);
	}

}
