package com.thymleafdemo.springbootthymleafdemo.securityconfig;

import java.util.Collection;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import com.thymleafdemo.springbootthymleafdemo.entities.Employee;
import com.thymleafdemo.springbootthymleafdemo.repository.EmployeeRepo;

public class CustomUserService implements UserDetailsService {
     
	@Autowired
	private EmployeeRepo employeeRepo;
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		  
		        Employee employee = employeeRepo.findByEmail(username).orElseThrow(()-> new UsernameNotFoundException("No user with Username"+username+" existss"));

		        if (employee != null) {
		            return new org.springframework.security.core.userdetails.User(user.getEmail(),
		                    employee.getPassword(),
		                    mapRolesToAuthorities(employee.getRoles()));
		        }else{
		            throw new UsernameNotFoundException("Invalid username or password.");
		        }
		    }

		    private Collection < ? extends GrantedAuthority> mapRolesToAuthorities(Collection<Roles> roles) {
		        Collection < ? extends GrantedAuthority> mapRoles = roles.stream()
		                .map(role -> new SimpleGrantedAuthority(role.getName()))
		                .collect(Collectors.toList());
		        return mapRoles;
		    }
	}

}
