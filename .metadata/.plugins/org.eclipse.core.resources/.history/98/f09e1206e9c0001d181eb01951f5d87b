package com.thymleafdemo.springbootthymleafdemo.securityconfig;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableMethodSecurity
public class SecurityConfig {
     
	@Bean
	public SecurityFilterChain getSecurityFilterChain(HttpSecurity http) throws Exception {
		http
		    
		    .authorizeHttpRequests(authorize->authorize
//		    		.requestMatchers("/login").permitAll()
		    		.anyRequest().authenticated()
		    		
		    		);
		    
		    http.formLogin()
		    .loginPage("/login")
	    .loginProcessingUrl("/processor");
		   
		    
//		http.httpBasic();		    
		
	
		
		
		return http.build();
		
	}
	
	@Bean public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder(10);
	}
	
	
	@Bean public InMemoryUserDetailsManager getMemoryUserDetailsManager() {
		
		UserDetails user1 = User.builder().username("Kshitij").password(passwordEncoder().encode("123")).roles("ADMIN").build();
		UserDetails user2 = User.builder().username("Scout").password(passwordEncoder().encode("secret")).roles("USER").build();
		UserDetails user3 = User.builder().username("Zitrox").password(passwordEncoder().encode("123UWU")).roles("LEADER").build();
	return new InMemoryUserDetailsManager(user1,user2,user3);
	}
}
